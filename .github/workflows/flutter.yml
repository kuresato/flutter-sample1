name: Flutter CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.27.3' # 使用するFlutterのバージョンを指定

    - name: Install dependencies
      run: flutter pub get

    - name: Run tests
      run: flutter test

    # SonarQubeにアクセスするソースIPを固定できないため、SecurityGroupの設定が課題になる
    # 対策１：AWS上でセルフホストランナーを使用する
    #         これなら素直にCodeBuildを使った方が良いと思われる
    # 対策２：GitHub Actionsが使用するIPアドレス範囲からのアクセスを許可する
    #         ただし、これでOKがもらえるとは思えない
    #         https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/about-githubs-ip-addresses
    #         CI/CD実行時に、今使っているIPアドレスからのアクセスだけを許可する・・・ってのはがんばればできるか？？？
    #         curl https://ifconfig.me の結果を使って、SecurityGroupの設定を変更する・・・ってのはどうか？？？

    # SonarQube公式のアクションはこれ？
    # https://github.com/marketplace/actions/official-sonarqube-scan
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v4.2.1
      env:
        SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}      # SonarQubeのURL
        SONAR_ROOT_CERT: ${{ vars.SONARQUBE_CERT }}     # SonarQubeが信頼する証明書を指定する場合
        # トークンを環境変数で渡せるか、コマンド引数で渡すかはバージョンによって変わる模様
        # SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        scannerVersion: 6.2.1.4610  # SonarScannerのバージョンを指定
        projectBaseDir: .
        args: >
          -Dsonar.organization=my-organization
          -Dsonar.projectKey=my-projectkey
          -Dsonar.sources=lib,pubspec.yaml
          -Dsonar.tests=test
          -Dsonar.verbose=true
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}

    # SonarQubeの結果をチェック
    # - name: Quality Gate
    #   uses: sonarsource/sonarcloud-quality-gate-action@master
    #   env:
    #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    # ビルド成果物を保存
    # - name: Build APK
    #   run: flutter build apk --release

    # - name: Upload APK
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: app-release.apk
    #     path: build/app/outputs/flutter-apk/app-release.apk
